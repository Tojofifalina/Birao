"""
Django settings for Birao project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os.path
from pathlib import Path
import django_heroku
#import dj_databade_url
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


STATIC_URL = '/assets/'
STATICFILES_DIRS = (os.path.join(BASE_DIR,"assets/"),)
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-jeq*p-i!joswzy34%wbkd1-zu-7v$m5mtprre1(sjbmi4svhw+'

# SECURITY WARNING: don't run with debug turned on in production!
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
TEMPLATE_DEBUG = DEBUG
#ALLOWED_HOSTS = ['https://teste-fr2r.onrender.com']
import os

ALLOWED_HOSTS = ["*"]  # Ã€ restreindre en production

# Si DEBUG est True, Render peut ne pas dÃ©tecter l'application correctement
DEBUG = os.getenv("DEBUG", "False") == "True"
import os
PORT = os.getenv("PORT", "10000")  # Render attribue dynamiquement un port


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Fitatanana',
    'Tableau.apps.TableauConfig',
    'Fanamarinana.apps.FanamarinanaConfig',
    'accounts',
    'Vola.apps.VolaConfig',




]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",

]

ROOT_URLCONF = 'Birao.urls'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Birao.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
#import pymysql
#pymysql.install_as_MySQLdb
import os
#import dj_database_url

#DATABASES = {
#    'default': dj_database_url.config(default=os.getenv('DATABASE_URL'))
#}


#DATABASES = {
 #   'default': {
  #      'ENGINE': 'django.db.backends.mysql',
   #     'NAME': 'basebirao',
    #    'USER': 'tojofifaliana',
     #   'PASSWORD': 'tojo6321',
      #  'HOST': 'db4free.net',  # ou autre selon le service
       # 'PORT': '3306',
    #}
#}
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
        'USER': '',
        'PASSWORD': '',
        'HOST': '',
        'PORT': '',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'fr-Fr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS =[
    os.path.join(BASE_DIR,'static'),


]

#STATIC_ROOT = BASE_DIR / "static"
#STATIC_ROOT = os.path.join(BASE_DIR, 'static')
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media')
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

#DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
#django_heroku.settings(locals())
import os
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent

# ðŸ“Œ Django utilisera ce dossier pour servir les fichiers statiques
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # ðŸ“Œ DÃ©finir oÃ¹ chercher les fichiers

# ðŸ“Œ Pas besoin de STATICFILES_DIRS si on met tout dans STATIC_ROOT

CSRF_TRUSTED_ORIGINS = [
    'https://teste-fr2r.onrender.com/',
    
]

# Pour dÃ©sactiver temporairement (Non recommandÃ© en production)
CSRF_COOKIE_SECURE = False
